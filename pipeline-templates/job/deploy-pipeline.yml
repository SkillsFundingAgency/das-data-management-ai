parameters:
  Environment:
  ServiceConnection:

jobs:
- deployment: DeployInfra
  environment: ${{ parameters.Environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        - template: azure-pipelines-templates/deploy/step/wait-azure-devops-deployment.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            EnvironmentId: $(Environment.Id)
            PipelineName: $(Build.DefinitionName)
            RunId: $(Build.BuildId)
        - checkout: self
        - template: azure-pipelines-templates/deploy/step/arm-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SubscriptionId: $(SubscriptionId)
            Location: $(ResourceGroupLocation)
            Environment: ${{ parameters.Environment }}
            TemplatePath: das-data-management-ai/azure/template.json
            ParametersPath: das-data-management-ai/azure/template.parameters.json
            IsMultiRepoCheckout: true
- job: DeployPipelines
  dependsOn: DeployInfra
  pool:
    vmImage: ubuntu-latest
  container: mlops
  variables:
  - name: WorkspaceName
    value: $[ dependencies.DeployInfra.outputs['DeployInfra.ArmOutputs${{ parameters.Environment }}.WorkspaceName'] ]
  - name: ResourceGroupName
    value: $[ dependencies.DeployInfra.outputs['DeployInfra.ArmOutputs${{ parameters.Environment }}.ResourceGroupName'] ]
  - name: ComputeName
    value: $[ dependencies.DeployInfra.outputs['DeployInfra.ArmOutputs${{ parameters.Environment }}.ComputeName'] ]
  steps:
  - checkout: self
  - task: AzureCLI@2
    displayName: "Deploy ML pipelines"
    inputs:
      azureSubscription: ${{ parameters.ServiceConnection }}
      workingDirectory: $(Build.SourcesDirectory)
      scriptLocation: inlineScript
      scriptType: bash
      inlineScript: |
        set -e # fail on error
        export SUBSCRIPTION_ID=$(az account show --query id -o tsv)
        export WORKSPACE_NAME=$(WorkspaceName)
        export RESOURCE_GROUP=$(ResourceGroupName)
        python -m ml_service.pipelines.employer_engagement_train_pipeline