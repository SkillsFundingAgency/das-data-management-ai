parameters:
  Environment:
  ServiceConnection:

jobs:
- deployment: DeployInfra
  environment: ${{ parameters.Environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self
        - template: azure-pipelines-templates/deploy/step/arm-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SubscriptionId: $(SubscriptionId)
            Location: $(ResourceGroupLocation)
            Environment: ${{ parameters.Environment }}
            TemplatePath: das-data-management-ai/azure/template.json
            ParametersPath: das-data-management-ai/azure/template.parameters.json
            IsMultiRepoCheckout: true
- job: BuildAndTrain
  dependsOn: DeployInfra
  variables:
  - name: WorkspaceName
    value: $[ dependencies.DeployInfra.outputs['DeployInfra.ArmOutputs${{ parameters.Environment }}.WorkspaceName'] ]
  - name: ResourceGroupName
    value: $[ dependencies.DeployInfra.outputs['DeployInfra.ArmOutputs${{ parameters.Environment }}.ResourceGroupName'] ]
  - name: ComputeName
    value: $[ dependencies.DeployInfra.outputs['DeployInfra.ArmOutputs${{ parameters.Environment }}.ComputeName'] ]
  steps:
  - checkout: self
  - task: AzureCLI@2
    displayName: "Train and Register"
    inputs:
      azureSubscription: ${{ parameters.ServiceConnection }}
      workingDirectory: models/placeholder
      scriptLocation: inlineScript
      scriptType: "pscore"
      inlineScript: |
        Write-Host "Installing ML CLI"
        az extension add -n azure-cli-ml
        Write-Host "Attaching folder"
        az ml folder attach --workspace-name $(WorkspaceName) --resource-group $(ResourceGroupName)
        Write-Host "Train"
        az ml run submit-script --run-configuration-name config/train --target $(ComputeName) --experiment-name placeholder-exp --output-metadata-file run.json train.py
        ## Validate output before registering?
        Write-Host "Register model"
        az ml model register --name placeholder-model --run-metadata-file run.json --asset-path outputs/output.pkl --output-metadata-file model.json

