parameters:
  Environment:
  ServiceConnection:

jobs:
- deployment: DeployInfra
  environment: ${{ parameters.Environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        - template: azure-pipelines-templates/deploy/step/wait-azure-devops-deployment.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            EnvironmentId: $(Environment.Id)
            PipelineName: $(Build.DefinitionName)
            RunId: $(Build.BuildId)
        - checkout: self
        - template: azure-pipelines-templates/deploy/step/arm-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SubscriptionId: $(SubscriptionId)
            Location: $(ResourceGroupLocation)
            Environment: ${{ parameters.Environment }}
            TemplatePath: das-data-management-ai/azure/template.json
            ParametersPath: das-data-management-ai/azure/template.parameters.json
            IsMultiRepoCheckout: true

# ###TODO: This is commented out as the AZDO SP doesnt have permission to change IAM
# - job: SetPermissions
#   dependsOn: DeployInfra
#   variables:
#   - group: AT DevTest Shared Resources
#   - name: ResourceGroupName
#     value: $[ dependencies.DeployInfra.outputs['DeployInfra.ArmOutputs${{ parameters.Environment }}.ResourceGroupName'] ]
#   - name: StorageAccountName
#     value: $[ dependencies.DeployInfra.outputs['DeployInfra.ArmOutputs${{ parameters.Environment }}.StorageAccountName'] ]

#   steps:
#     - checkout: self
#     - task: AzurePowerShell@5
#       displayName: 'Azure PowerShell: Set Permissions'
#       inputs:
#         azureSubscription: ${{ parameters.ServiceConnection }}
#         scriptType: filePath
#         scriptPath: azure/Set-AzRoleAssignment.ps1
#         ScriptArguments: '-resourceGroupName $(resourceGroupName) -StorageAccountName $(StorageAccountName) -EnvironmentName $(EnvironmentName)'
#         errorActionPreference: stop
#         azurePowerShellVersion: latestVersion
#         pwsh: true

- job: DeployPipelines
  dependsOn: DeployInfra
  pool:
    vmImage: ubuntu-latest
  container: mlops
  variables:
  - name: WorkspaceName
    value: $[ dependencies.DeployInfra.outputs['DeployInfra.ArmOutputs${{ parameters.Environment }}.WorkspaceName'] ]
  - name: ResourceGroupName
    value: $[ dependencies.DeployInfra.outputs['DeployInfra.ArmOutputs${{ parameters.Environment }}.ResourceGroupName'] ]
  - name: ComputeName
    value: $[ dependencies.DeployInfra.outputs['DeployInfra.ArmOutputs${{ parameters.Environment }}.ComputeName'] ]
  steps:
  - checkout: self
  - task: AzureCLI@2
    condition: ${{ or(eq(parameters.Environment, 'PP'), eq(parameters.Environment, 'PROD')) }}
    displayName: "Add IP to ML workspace whitelist"
    inputs:
      azureSubscription: ${{ parameters.ServiceConnection }}
      workingDirectory: $(Build.SourcesDirectory)
      scriptLocation: inlineScript
      scriptType: bash
      inlineScript: |
        set -e # fail on error
        ip=$(curl -s http://ipinfo.io/json | jq -r '.ip')
        echo "Public IP Address: $ip"
        az resource update -n $(WorkspaceName) -g $(ResourceGroupName) --resource-type Microsoft.MachineLearningServices/workspaces --add properties.ipAllowlist $ip
  - task: AzureCLI@2
    displayName: "Deploy ML pipelines"
    inputs:
      azureSubscription: ${{ parameters.ServiceConnection }}
      workingDirectory: $(Build.SourcesDirectory)
      scriptLocation: inlineScript
      scriptType: bash
      inlineScript: |
        set -e # fail on error
        export SUBSCRIPTION_ID=$(az account show --query id -o tsv)
        export WORKSPACE_NAME=$(WorkspaceName)
        export RESOURCE_GROUP=$(ResourceGroupName)
        python -m ml_service.pipelines.employer_engagement_train_pipeline
  - task: AzureCLI@2
    condition: ${{ or(eq(parameters.Environment, 'PP'), eq(parameters.Environment, 'PROD')) }}
    displayName: "Remove IP to ML workspace whitelist"
    inputs:
      azureSubscription: ${{ parameters.ServiceConnection }}
      workingDirectory: $(Build.SourcesDirectory)
      scriptLocation: inlineScript
      scriptType: bash
      inlineScript: |
        set -e # fail on error
        ip=$(curl -s http://ipinfo.io/json | jq -r '.ip')
        echo "Public IP Address: $ip"
        ip="${ip}/32"
        echo "Public IP Address with /32: $ip"
        indexToRemove=$(az resource show -n $(WorkspaceName) -g $(ResourceGroupName) --resource-type Microsoft.MachineLearningServices/workspaces --query properties.ipAllowlist -o json | jq -c --arg ip "$ip" '. | to_entries[] | select(.value==$ip) | .key ')
        echo "$indexToRemove"
        az resource update -n $(WorkspaceName) -g $(ResourceGroupName) --resource-type Microsoft.MachineLearningServices/workspaces --remove properties.ipAllowlist $indexToRemove